<div class="container">
 
{{ render(controller(

    'App\\Controller\\AnnonceController::showannonce', {id: app.request.get('idannonce')

     }

)) }}
{{ form_start(form) }}



    <div class="d-none">
    {{ form_row(form.NbNuit) }}
    {{ form_row(form.Statue) }}
    {{ form_row(form.StatuePayment) }}
    {{ form_row(form.Total) }}
    </div>
    {{ form_widget(form) }}


    <div class="row row-cols-auto">
<div class="col">
Nombre 
</div>
<div class="col">
    <div id="nb">
    0
    </div>
    </div>

<div class="col">
    Nuit
    </div>

    </div>

<div class="row row-cols-auto">
<div class="col">
Total
</div>
<div class="col">
    <div id="TotalHT">
    0 
    </div> 
    </div>

<div class="col">
    € / HT
    </div>

    </div>
<div class="row row-cols-auto">
<div class="col">
Total
</div>
<div class="col">
    <div id="Total">
    0 
    </div> 
    </div>

<div class="col">
    € / tva incluse (20 %)
    </div>

    </div>
    
    <select name="reservation[StatuePayment]" id="statpay">
      <option value="0">Payment Plus tard</option>
      <option value="1">Payment Par paypal</option>
      <option value="2">Payment Par cheque ou espece</option>
    </select>



<div class="paypal" style="display:none;">
<div id="smart-button-container">
    <div style="text-align: center;" ><label for="description"> </label><input type="text" name="descriptionInput" id="description" maxlength="127" value="atipik"></div>
      <p id="descriptionError" style="visibility: hidden; color:red; text-align: center;">Please enter a description</p>
    <div style="text-align: center;"><label for="amount"> </label><input name="amountInput" type="number" id="amount" value="" ></div>
      <p id="priceLabelError" style="visibility: hidden; color:red; text-align: center;">Please enter a price</p>
    <div id="invoiceidDiv" style="text-align: center; display: none;"><label for="invoiceid"> </label><input name="invoiceid" maxlength="127" type="text" id="invoiceid" value="" ></div>
      <p id="invoiceidError" style="visibility: hidden; color:red; text-align: center;">Please enter an Invoice ID</p>
    <div style="text-align: center; margin-top: 0.625rem;" id="paypal-button-container"></div>
  </div>
  </div>


  
<br>
<div class="alert alert-danger" id='message' style="display:none;">
</div>
    <button class="btn btn-outline-success" id="success">{{ button_label|default('Save') }}</button>
  
  <script src="https://www.paypal.com/sdk/js?client-id=sb&enable-funding=venmo&currency=EUR" data-sdk-integration-source="button-factory"></script>
  <script>
  function initPayPalButton() {
    var description = document.querySelector('#smart-button-container #description');
    var amount = document.querySelector('#smart-button-container #amount');
    var descriptionError = document.querySelector('#smart-button-container #descriptionError');
    var priceError = document.querySelector('#smart-button-container #priceLabelError');
    var invoiceid = document.querySelector('#smart-button-container #invoiceid');
    var invoiceidError = document.querySelector('#smart-button-container #invoiceidError');
    var invoiceidDiv = document.querySelector('#smart-button-container #invoiceidDiv');

    var elArr = [description, amount];

    if (invoiceidDiv.firstChild.innerHTML.length > 1) {
      invoiceidDiv.style.display = "block";
    }

    var purchase_units = [];
    purchase_units[0] = {};
    purchase_units[0].amount = {};

    function validate(event) {
      return event.value.length > 0;
    }

    paypal.Buttons({
      style: {
        color: 'blue',
        shape: 'pill',
        label: 'paypal',
        layout: 'horizontal',
        
      },

      onInit: function (data, actions) {
        actions.disable();

        if(invoiceidDiv.style.display === "block") {
          elArr.push(invoiceid);
        }

        elArr.forEach(function (item) {
          item.addEventListener('keyup', function (event) {
            var result = elArr.every(validate);
            if (result) {
              actions.enable();
            } else {
              actions.disable();
            }
          });
        });
      },

      onClick: function () {
        if (description.value.length < 1) {
          descriptionError.style.visibility = "visible";
        } else {
          descriptionError.style.visibility = "hidden";
        }

        if (amount.value.length < 1) {
          priceError.style.visibility = "visible";
        } else {
          priceError.style.visibility = "hidden";
        }

        if (invoiceid.value.length < 1 && invoiceidDiv.style.display === "block") {
          invoiceidError.style.visibility = "visible";
        } else {
          invoiceidError.style.visibility = "hidden";
        }

        purchase_units[0].description = description.value;
        purchase_units[0].amount.value = amount.value;

        if(invoiceid.value !== '') {
          purchase_units[0].invoice_id = invoiceid.value;
        }
      },

      createOrder: function (data, actions) {
        return actions.order.create({
          purchase_units: purchase_units,
        });
      },

      onApprove: function (data, actions) {
        return actions.order.capture().then(function (orderData) {

          // Full available details
          console.log('Capture result', orderData, JSON.stringify(orderData, null, 2));

          // Show a success message within this page, e.g.
          const element = document.getElementById('paypal-button-container');
          element.innerHTML = '';
          element.innerHTML = '<h3>Thank you for your payment!</h3>';

          // Or go to another URL:  actions.redirect('thank_you.html');
          
        });
      },

      onError: function (err) {
        console.log(err);
      }
    }).render('#paypal-button-container');
  }
  initPayPalButton();
  </script>
  
   
    <script>

var satpayement = document.querySelector('#statpay');
satpayement.addEventListener('change', () => {
if (satpayement.value == 1){
  var paypal = document.getElementsByClassName('paypal');
  paypal[0].style.display = 'block';
}
else{
  var paypal = document.getElementsByClassName('paypal');
  paypal[0].style.display = 'none';
}
});
 // paypal

/*
function add_15_prix(){
var selectElement = document.getElementById('annonce2_prix');
selectElement.value = selectElement.value * 1.15;
}

var input = document.getElementById('annonce2_prix');
input.onchange = function() {
  add_15_prix();
}
*/


function getDateDifference(date1, date2) {
  // On calcule la différence en milisecondes
  var diff = Math.abs(date1.getTime() - date2.getTime());
  // On calcule la différence en jours en divisant la différence en milisecondes par la longueur d'un jour en milisecondes
  var diffInDays = diff / (1000 * 60 * 60 * 24);
  return diffInDays;
}

const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

function numberToMonth(number) {
  return months[number - 1];
}
// console.log(numberToMonth(1));


function te(){
var debut_month_id = document.querySelector('#reservation_DateDebut_month').value;
var debut_day = document.querySelector('#reservation_DateDebut_day').value;
var debut_yaer = document.querySelector('#reservation_DateDebut_year').value;

var Fin_month_id = document.querySelector('#reservation_DateFin_month').value;
var Fin_day = document.querySelector('#reservation_DateFin_day').value;
var Fin_yaer = document.querySelector('#reservation_DateFin_year').value;

//var debut_month =numberToMonth(debut_month_id);
//var Fin_month =numberToMonth(Fin_month_id);

var debut_month =debut_month_id;
var Fin_month =Fin_month_id;

var date1 = new Date(debut_yaer, debut_month, debut_day);
var date2 = new Date(Fin_yaer, Fin_month, Fin_day);

var dateofmax = document.getElementById('dateofmax');
var dateofmin = document.getElementById('dateofmin');

var datejour=new Date();


// btn-outline-success
var btn_valide = document.getElementById('success');
var message = document.getElementById('message');

if(date1 > date2){
  message.style.display ="block";
  message.textContent ="la date n'est pas valide"; 
  btn_valide.disabled = true;
}
else if(dateofmax <= date2 ){
  message.style.display ="block";
  message.textContent ="la date n'est plus disponible pour se bien"; 
  btn_valide.disabled = true;
}
else if (dateofmin <= date1){
  message.style.display ="block";
  message.textContent ="la date n'est plus disponible pour se bien"; 
  btn_valide.disabled = true;

}
else if(date1 <= datejour){
  message.style.display ="block";
  message.textContent ="la date est deja passer"; 
  btn_valide.disabled = true;
}
else{
  message.style.display ="none";
message.textContent =""; 
btn_valide.disabled = false;
  
// console.log(getDateDifference(date1, date2)); // affiche 14

let difference = getDateDifference(date1, date2);
// console.log(difference);

var nb = document.querySelector('.nb');
nb.value = difference;
var nbid = document.querySelector('#nb');
nbid.textContent = difference;

var prix = document.querySelector('#prix').textContent;
// console.log(prix);
var reservation_Total = document.querySelector('#reservation_Total');
var Total = document.querySelector('#Total');
var TotalHT = document.querySelector('#TotalHT');
var paypal = document.querySelector('#amount');

var calcule = Math.round((difference * prix)*1.20);
var calculeht = Math.round((difference * prix));
reservation_Total.value = calcule;
Total.textContent = calcule;
TotalHT.textContent = calculeht;
paypal.value = calcule;

}
}



var selectElement = document.querySelector('#reservation_DateDebut_month');
selectElement.addEventListener('change', () => {
te();
});

var selectElement = document.querySelector('#reservation_DateDebut_day');
selectElement.addEventListener('change', () => {
te();
});
var selectElement = document.querySelector('#reservation_DateDebut_year');
selectElement.addEventListener('change', () => {
te();
});
var selectElement = document.querySelector('#reservation_DateFin_month');
selectElement.addEventListener('change', () => {
te();
});
var selectElement = document.querySelector('#reservation_DateFin_day');
selectElement.addEventListener('change', () => {
te();
});

var selectElement = document.querySelector('#reservation_DateFin_year');
selectElement.addEventListener('change', () => {
te();
});
</script>


{{ form_end(form) }}
</div>